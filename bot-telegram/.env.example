# ====================================
# Configuration Bot Telegram Anti-Spam
# ====================================

# --- OBLIGATOIRE ---

# Token du bot Telegram (obtenu via @BotFather)
BOT_TOKEN=your_bot_token_here

# ID Telegram de l'administrateur principal
ADMIN_ID=your_telegram_id_here

# URL MongoDB (MongoDB Atlas recommandé)
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/telegram-bot?retryWrites=true&w=majority

# --- CONFIGURATION WEBHOOK (Recommandé) ---

# URL publique de votre application (HTTPS requis)
# Exemples:
# - Render: https://your-app.onrender.com
# - Heroku: https://your-app.herokuapp.com
# - Railway: https://your-app.railway.app
# - VPS: https://your-domain.com
WEBHOOK_URL=https://your-app.onrender.com

# Port du serveur (généralement fourni par l'hébergeur)
PORT=3000

# --- OPTIONNEL ---

# Mode debug (affiche plus de logs)
DEBUG=false

# Token pour accéder aux statistiques via API
# Endpoint: GET /stats avec header Authorization: Bearer <token>
STATS_TOKEN=your_secret_stats_token

# --- CONFIGURATION ANTI-SPAM (Optionnel - valeurs par défaut OK) ---

# Limites globales
SPAM_MAX_PER_MINUTE=40
SPAM_MAX_PER_HOUR=200
SPAM_MAX_PER_DAY=1000

# Limites par utilisateur
SPAM_USER_MAX_MINUTE=10
SPAM_USER_MAX_HOUR=50

# Cooldown entre messages (en ms)
SPAM_MIN_COOLDOWN=500
SPAM_MAX_COOLDOWN=2000

# Détection de flood
SPAM_FLOOD_THRESHOLD=3
SPAM_FLOOD_BAN_DURATION=180000

# Comportement humain
SPAM_HUMAN_BEHAVIOR=true
SPAM_TYPING_DELAY=30
SPAM_MAX_TYPING_DELAY=3000

# --- NOTES IMPORTANTES ---

# 1. Ne jamais partager votre BOT_TOKEN
# 2. Utilisez HTTPS pour WEBHOOK_URL (obligatoire)
# 3. MongoDB Atlas offre un tier gratuit suffisant
# 4. Pour obtenir votre ADMIN_ID, utilisez @userinfobot sur Telegram
# 5. En production, utilisez des variables d'environnement sécurisées